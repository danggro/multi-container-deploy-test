services:
  postgres_db:
    image: docker.io/library/postgres
    container_name: postgres_db
    environment:
      POSTGRES_DB: test
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data/pgdata
      PGUSER: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_mcdt:/var/lib/postgresql/data

  redis_db:
    image: docker.io/library/redis
    container_name: redis_db
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_volume:/data

  multi-container-deploy-backend:
    image: docker.io/danggro/multi-container-deploy-test-backend:main
    container_name: multi-container-deploy-backend
    environment:
      POSTGRES_DB: postgres://postgres:secret@postgres_db:5432/test
      REDIS_DB: redis://redis_db:6379
    depends_on:
      postgres_db:
        condition: service_healthy
      redis_db:
        condition: service_started

  multi-container-deploy-frontend:
    image: docker.io/danggro/multi-container-deploy-test-frontend:main
    container_name: multi-container-deploy-frontend

  nginx:
    image: docker.io/danggro/mcdt-nginx
    ports:
      - 80:80
    container_name: reverse-proxy
    depends_on:
      multi-container-deploy-frontend:
        condition: service_started
      multi-container-deploy-backend:
        condition: service_started

volumes:
  postgres_mcdt:
    driver: azure_file
    driver_opts:
      share_name: postgresmcdt
      storage_account_name: postgresmcdt
  redis_volume:
